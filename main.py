import telebot
from telebot import types
import settings
import sqlite3
import random
import time
import threading
import re
from datetime import datetime
bot = telebot.TeleBot(settings.TOKEN)
    


# –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤
db_lock = threading.Lock()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
active_games = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_balances = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é
def update_menu_markup(chat_id, user_status):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    if user_status == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":
        item1 = types.KeyboardButton("–ò–≥—Ä–∞—Ç—å üé∞")
        item2 = types.KeyboardButton("–ö–æ—à–µ–ª–µ–∫ üí∞")
        item3 = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å ü™™")
        item4 = types.KeyboardButton("–ü–æ–º–æ—â—å ‚ÑπÔ∏è")
        
        markup.add(item1, item2, item3, item4)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å" –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        user_id = chat_id
        conn = sqlite3.connect('database.db')
        cursor = conn.cursor()

        cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
        user_info = cursor.fetchone()

        if user_info and user_info[3] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":
            admin_panel_button = types.KeyboardButton("–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å üõ†")
            markup.add(admin_panel_button)
        
        conn.close()
    else:
        item1 = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        markup.add(item1)
    
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_status = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    add_user_to_database(user_id, message)  # –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
    if message.chat.type == 'private':
        buttons = [
            types.KeyboardButton("–ò–≥—Ä–∞—Ç—å üé∞"),
            types.KeyboardButton("–ö–æ—à–µ–ª–µ–∫ üí∞"),
            types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å ü™™"),
            types.KeyboardButton("–ü–æ–º–æ—â—å ‚ÑπÔ∏è")
        ]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*buttons)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        user_status[user_id] = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    else:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏—Ç–µ /game.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@bot.message_handler(func=lambda message: message.text == "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")
def go_back_to_menu(message):
    user_id = message.from_user.id
    user_status.setdefault(user_id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
    if message.chat.type == 'private':
        if user_status[user_id] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":
            update_menu_markup(message.chat.id, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")  # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        else:
            update_menu_markup(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")  # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    else:
        bot.send_message(message.chat.id, "–ö–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è' –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.")








# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–≥—Ä–∞—Ç—å üé∞" –≤ –∏–≥—Ä–æ–≤—ã—Ö —á–∞—Ç–∞—Ö
@bot.message_handler(func=lambda message: message.text == "–ò–≥—Ä–∞—Ç—å üé∞" and message.chat.type != 'private')
def handle_play_in_game_chat(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /game –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–≥—Ä–∞—Ç—å üé∞" –≤ –ª–∏—á–Ω—ã—Ö —á–∞—Ç–∞—Ö
@bot.message_handler(func=lambda message: message.text == "–ò–≥—Ä–∞—Ç—å üé∞" and message.chat.type == 'private')
def handle_play_in_private(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    bot.send_message(chat_id, "üé∞–ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—åüé∞\nhttps://t.me/+fYWDIZW__DFhYWVi")


conn = sqlite3.connect('database.db')
cursor = conn.cursor()

import sqlite3

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_user_balance(user_id):
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute("SELECT balance FROM users WHERE user_id=?", (user_id,))
    user_balance = cursor.fetchone()
    conn.close()
    return user_balance[0] if user_balance else 0.0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def update_user_balance(user_id, new_balance):
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute("UPDATE users SET balance=? WHERE user_id=?", (new_balance, user_id))
    conn.commit()
    conn.close()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /game
@bot.message_handler(commands=['game'], func=lambda message: message.chat.type != 'private')
def start_game_with_command(message):
    user_id = message.from_user.id
    chat_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã
    match = re.match(r"/game (\d+)$", message.text)
    if not match:
        bot.send_message(chat_id, "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã —É–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–≤–∫—É –≤ –≤–∏–¥–µ –∫–æ–º–∞–Ω–¥—ã `/game [—Å—Ç–∞–≤–∫–∞]`, –Ω–∞–ø—Ä–∏–º–µ—Ä, `/game 100`.")
        return

    bet = int(match.group(1))
    user_balance = get_user_balance(user_id)

    if user_balance < bet:
        bot.send_message(chat_id, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–≤–∫–∏.")
        return

    # –°–Ω–∏–º–∞–µ–º —Å—Ç–∞–≤–∫—É —Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    new_balance = user_balance - bet
    update_user_balance(user_id, new_balance)

    game_id = f'game_{random.randint(1000, 9999)}'
    markup = types.InlineKeyboardMarkup()
    join_button = types.InlineKeyboardButton("–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data=game_id)
    markup.add(join_button)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞" —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –∏–≥—Ä—ã
    if game_id in active_games and message.from_user.id == active_games[game_id]["creator_id"]:
        cancel_button = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data=f'cancel_{game_id}')
        markup.add(cancel_button)

    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
    game_info_message = f"‚Ä¢ –ò–≥—Ä–æ–∫ @{message.from_user.username} —Å–æ–∑–¥–∞–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–≥—Ä—É üí∏\n\n" \
                        f"‚Ä¢ –ò–≥—Ä–∞: –ö–æ—Å—Ç–∏üé≤\n" \
                        f"‚Ä¢ –°—Ç–∞–≤–∫–∞: {bet} ü™ô\n" \
                        f"‚Ä¢ –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã: {time.strftime('%H:%M:%S', time.localtime())} üïê"
    message = bot.send_message(chat_id, game_info_message, reply_markup=markup)

    active_games[game_id] = {"creator_id": user_id, "bet": bet, "canceled": False, "message_id": message.message_id}

@bot.callback_query_handler(func=lambda call: call.data.startswith('game_'))
def join_game(call):
    user_id = call.from_user.id
    game_id = call.data
    chat_id = call.message.chat.id

    if game_id in active_games:
        if active_games[game_id]["creator_id"] != user_id:
            # –£–¥–∞–ª–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
            bot.edit_message_reply_markup(chat_id, call.message.message_id, reply_markup=None)

            # –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
            player1_bet = active_games[game_id]["bet"]
            player2_bet = active_games[game_id]["bet"]

            # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–∞ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤ (–æ—Ç 1 –¥–æ 6)
            player1_roll = random.randint(1, 6)
            player2_roll = random.randint(1, 6)

            # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
            if player1_roll > player2_roll:
                winner = f"–ò–≥—Ä–æ–∫ @{active_games[game_id]['creator_id']} üèÜ"
            elif player1_roll < player2_roll:
                winner = f"–ò–≥—Ä–æ–∫ @{user_id} üèÜ"
            else:
                winner = "–ù–∏—á—å—è"

            # –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à
            if winner == f"–ò–≥—Ä–æ–∫ @{active_games[game_id]['creator_id']} üèÜ":
                prize = int((player1_bet + player2_bet) * 0.95)
                new_balance_creator = get_user_balance(active_games[game_id]["creator_id"]) + prize
                update_user_balance(active_games[game_id]["creator_id"], new_balance_creator)
                new_balance = get_user_balance(user_id) - player1_bet
                update_user_balance(user_id, new_balance)
            elif winner == f"–ò–≥—Ä–æ–∫ @{user_id} üèÜ":
                prize = int((player1_bet + player2_bet) * 0.95)
                new_balance = get_user_balance(user_id) + prize
                update_user_balance(user_id, new_balance)
                new_balance_creator = get_user_balance(active_games[game_id]["creator_id"]) - player1_bet
                update_user_balance(active_games[game_id]["creator_id"], new_balance_creator)
            else:
                prize = 0

            # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã
            bot.send_message(chat_id, f"–ò–≥—Ä–æ–∫ @{active_games[game_id]['creator_id']} –≤—ã–±—Ä–æ—Å–∏–ª {player1_roll}\n"
                                      f"–ò–≥—Ä–æ–∫ @{user_id} –≤—ã–±—Ä–æ—Å–∏–ª {player2_roll}\n\n"
                                      f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã: {winner}\n"
                                      f"–í—ã–∏–≥—Ä—ã—à: {prize:.2f} ü™ô")

            # –£–¥–∞–ª–∏—Ç—å –∏–≥—Ä—É –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
            del active_games[game_id]
        else:
            bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–≤–æ–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∏–≥—Ä–µ.")
    else:
        bot.send_message(chat_id, "–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_wallet_info(user_id):
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()
    conn.close()
    
    if user_info:
        id, user_id, username, first_name, last_name, chat_id, balance, status = user_info
        return {
            "username": username or "N/A",
            "id": user_id,
            "balance": balance,
            "status": status
        }
    else:
        return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö–æ—à–µ–ª–µ–∫ üí∞"
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö–æ—à–µ–ª–µ–∫ üí∞"
@bot.message_handler(func=lambda message: message.text == "–ö–æ—à–µ–ª–µ–∫ üí∞")
def handle_wallet_menu(message):
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—à–µ–ª—å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    wallet_info = get_wallet_info(user_id)
    
    if wallet_info:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –º–µ–Ω—é "–ö–æ—à–µ–ª–µ–∫"
        wallet_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        
        deposit_button = types.KeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí≥")
        withdraw_button = types.KeyboardButton("–í—ã–≤–µ—Å—Ç–∏ üí∏")
        transfer_button = types.KeyboardButton("–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ üîÑ")
        promo_code_button = types.KeyboardButton("–ü—Ä–æ–º–æ–∫–æ–¥ üéÅ")
        back_button = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")
        
        wallet_markup.row(deposit_button, withdraw_button)
        wallet_markup.row(transfer_button, promo_code_button)
        wallet_markup.row(back_button)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ—à–µ–ª—å–∫–µ
        wallet_message = f"üí∞ –ö–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        wallet_message += f"üìõ –ò–º—è: @{wallet_info['username']} \n"
        wallet_message += f"üÜî ID: {wallet_info['id']}\n"
        wallet_message += f"üí∞ –ë–∞–ª–∞–Ω—Å: {wallet_info['balance']} ü™ô\n"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ—à–µ–ª—å–∫–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.send_message(user_id, wallet_message, reply_markup=wallet_markup)
    else:
        bot.send_message(user_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start.")

























# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ cursor –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ—Ç–æ–∫–∞
def get_cursor():
    conn = sqlite3.connect('database.db')
    return conn.cursor()
def copy_admins_from_users():
    cursor = get_cursor()
    cursor.execute("SELECT user_id, username, first_name, last_name FROM users WHERE status='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'")
    admins = cursor.fetchall()
    
    for admin in admins:
        # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É "admins"
        cursor.execute("INSERT OR IGNORE INTO admins (user_id, username, first_name, last_name) VALUES (?, ?, ?, ?)",
                       admin)
    
    cursor.connection.commit()
    cursor.connection.close()



# –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
copy_admins_from_users()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí≥"
@bot.message_handler(func=lambda message: message.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å üí≥")
def start(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("Sweat Wallet ü™ô", callback_data="sweat_wallet"))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:", reply_markup=markup)
    bot.register_next_step_handler(message, enter_amount)  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∑–¥–µ—Å—å




def get_admins():
    cursor = get_cursor()
    cursor.execute("SELECT user_id FROM admins")
    admin_ids = cursor.fetchall()
    cursor.connection.close()
    return admin_ids

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö —à–∞–≥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_steps = {}

@bot.callback_query_handler(func=lambda call: call.data == "sweat_wallet")
def sweat_wallet_selected(call):
    bot.send_message(call.message.chat.id, "–í—ã–±—Ä–∞–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: Sweat Walletü™ô\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—èüí∏")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = call.message.chat.id
    user_steps[user_id] = "enter_amount"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: user_steps.get(message.chat.id) == "enter_amount")
def enter_amount(message):
    user_id = message.chat.id

    try:
        amount = float(message.text)

        # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—É–º–º—É –∏ —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('database.db')
        cursor = conn.cursor()
        cursor.execute("INSERT INTO deposit (user_id, amount, status) VALUES (?, ?, ?)", (user_id, amount, '–û–∂–∏–¥–∞–Ω–∏–µ'))
        conn.commit()
        conn.close()

        user_steps[user_id] = "wait_for_receipt"  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
        instructions = """‚Ä¢ –ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –≤–∞—à –∫–æ—à–µ–ª–µ–∫ sweat wallet‚ÑπÔ∏è\n‚Ä¢ –°–ª–µ–≤–∞ –ø–æ —Å–µ—Ä–µ–¥–∏–Ω–µ –∫–Ω–æ–ø–∫–∞(transfer)‚ÑπÔ∏è\n‚Ä¢ –ö–Ω–æ–ø–∫–∞ send –≤ –ø—É–Ω–∫—Ç–µ transfer ‚ÑπÔ∏è\n‚Ä¢ –í—ã–±–æ—Ä –º–æ–Ω–µ—Ç, –≤—ã–±–∏—Ä–∞–µ—Ç–µ –ø–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç (sweat)‚ÑπÔ∏è\n‚Ä¢ –û–∫–Ω–æ —Å –ø–æ–∏—Å–∫–æ–º –Ω–∏–∫–Ω–µ–π–º–∞‚ÑπÔ∏è\n–ù–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏üëá\n\n(–ü–æ–∑–∂–µ)\n‚Ä¢ –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —á–µ–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞‚ÑπÔ∏è\n ‚ùóÔ∏è–ù–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É‚ùóÔ∏è"""
        bot.send_message(user_id, instructions)
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –æ–ø–ª–∞—Ç—ã.")
    except ValueError:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —á–∏—Å–ª–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'], func=lambda message: user_steps.get(message.chat.id) == "wait_for_receipt")
def process_receipt(message):
    user_id = message.chat.id
    admin_ids = get_admins()
    user_info = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - {user_id} ({message.from_user.username})"

    # –ü–æ–ª—É—á–∏–º ID –∑–∞–∫–∞–∑–∞ –∏ —Å—É–º–º—É –∏–∑ –≤–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute("SELECT id, amount FROM deposit WHERE user_id = ? ORDER BY id DESC LIMIT 1", (user_id,))
    last_order = cursor.fetchone()
    conn.close()

    if last_order:
        order_id, order_amount = last_order
        bot.send_message(user_id, f"–í–∞—à –∑–∞–∫–∞–∑ ‚Ññ{order_id} –Ω–∞ —Å—É–º–º—É {order_amount} ü™ô –±—ã–ª –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n–û–∂–∏–¥–∞–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")
    else:
        bot.send_message(user_id, "–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.")

    message_text = f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ!\nID –∑–∞–∫–∞–∑–∞ - {order_id}\n–°—É–º–º–∞ - {order_amount}\n{user_info}"

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü—Ä–∏–Ω—è—Ç—å" –∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"
    markup = types.InlineKeyboardMarkup()
    accept_button = types.InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_order:{order_id}")
    reject_button = types.InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_order:{order_id}")
    markup.add(accept_button, reject_button)

    for admin_id in admin_ids:
        bot.forward_message(admin_id[0], user_id, message.message_id)
        bot.send_message(admin_id[0], message_text, reply_markup=markup)

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
    user_steps[user_id] = None
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def update_user_balance(user_id, amount):
    # –ü–æ–ª—É—á–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute("SELECT balance FROM users WHERE user_id = ?", (user_id,))
    current_balance = cursor.fetchone()

    if current_balance is not None:
        current_balance = current_balance[0]
        new_balance = current_balance + amount

        # –û–±–Ω–æ–≤–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("UPDATE users SET balance = ? WHERE user_id = ?", (new_balance, user_id))
        conn.commit()

    conn.close()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–Ω—è—Ç—å" –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
@bot.callback_query_handler(lambda call: call.data.startswith('accept_order:'))
def accept_order(call):
    # –ò–∑–≤–ª–µ—á—å ID –∑–∞–∫–∞–∑–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–±—ç–∫–∞
    order_id = int(call.data.split(':')[1])

    # –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute("SELECT user_id, amount, status FROM deposit WHERE id = ?", (order_id,))
    order_info = cursor.fetchone()

    if order_info:
        user_id, amount, status = order_info

        # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
        if status == '–û–∂–∏–¥–∞–Ω–∏–µ':
            # –£–≤–µ–ª–∏—á—å—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
            update_user_balance(user_id, amount)

            # –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            cursor.execute("UPDATE deposit SET status = '–ü—Ä–∏–Ω—è—Ç' WHERE id = ?", (order_id,))
            conn.commit()

            # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞ –∏ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞
            bot.send_message(user_id, f"‚úÖ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω ‚úÖ\nüí∏ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: {amount} ü™ô\n\nüé∞ [–ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∏–≥—Ä–µ](https://t.me/+fYWDIZW__DFhYWVi)", parse_mode="Markdown")

            # –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥–º–∏–Ω—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–∞
            bot.answer_callback_query(call.id, text="–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!")
        elif status == '–ü—Ä–∏–Ω—è—Ç':
            # –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥–º–∏–Ω—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, —á—Ç–æ –∑–∞–∫–∞–∑ —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω
            bot.answer_callback_query(call.id, text="–î–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ó–∞–∫–∞–∑ –±—ã–ª —Ä–∞–Ω–µ–µ –ø—Ä–∏–Ω—è—Ç.")
        elif status == '–û—Ç–∫–ª–æ–Ω–µ–Ω':
            bot.answer_callback_query(call.id, text="–î–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ó–∞–∫–∞–∑ –±—ã–ª —Ä–∞–Ω–µ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω.")
        else:
            bot.answer_callback_query(call.id, text="–î–∞–Ω–Ω—ã–π –∑–∞–∫–∞–∑ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω, –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ.")
    
    conn.close()



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å" –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
@bot.callback_query_handler(lambda call: call.data.startswith('reject_order:'))
def reject_order(call):
    # –ò–∑–≤–ª–µ—á—å ID –∑–∞–∫–∞–∑–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–±—ç–∫–∞
    order_id = int(call.data.split(':')[1])

    # –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    cursor.execute("SELECT user_id, amount FROM deposit WHERE id = ?", (order_id,))
    order_info = cursor.fetchone()

    if order_info:
        user_id, amount = order_info

        # –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("UPDATE deposit SET status = '–û—Ç–∫–ª–æ–Ω–µ–Ω' WHERE id = ?", (order_id,))
        conn.commit()

        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        message_to_user = f"‚ùå –í–∞—à –ø–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω ‚ùå\n–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_id}\n–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: {amount} ü™ô\n\n‚Ä¢–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å @—Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞‚ùóÔ∏è"

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(user_id, message_to_user, parse_mode="Markdown")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    conn.close()



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /create_promocode
@bot.message_handler(commands=['create_promocode'])
def create_promocode(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()

    if user_info and user_info[7] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –ü–æ–ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:")
        bot.register_next_step_handler(message, process_promocode_step)
    else:
        bot.send_message(chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

    conn.close()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
def process_promocode_step(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    promocode = message.text
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ–º–æ–∫–æ–¥–∞, —Ç–∞–∫–∏–µ –∫–∞–∫ reward, expiration_date, max_activations –∏ —Ç. –¥.

    # –î–æ–±–∞–≤—å—Ç–µ –∫–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å —É –∞–¥–º–∏–Ω–∞ –æ reward –∏ –¥–∞—Ç–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–π

    # –í–∞—à –∫–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–¥–µ—Å—å

    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–≥—Ä–∞–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100):")
    bot.register_next_step_handler(message, process_reward_step, promocode)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –Ω–∞–≥—Ä–∞–¥—ã
def process_reward_step(message, promocode):
    user_id = message.from_user.id
    chat_id = message.chat.id
    reward = message.text
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    try:
        reward = int(reward)

        # –í–∞—à –∫–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–¥–µ—Å—å

        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î):")
        bot.register_next_step_handler(message, process_expiration_date_step, promocode, reward)
    except ValueError:
        bot.send_message(chat_id, "–ù–∞–≥—Ä–∞–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –¥–∞—Ç—ã –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
def process_expiration_date_step(message, promocode, reward):
    user_id = message.from_user.id
    chat_id = message.chat.id
    expiration_date = message.text
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –î–æ–±–∞–≤—å—Ç–µ –∑–¥–µ—Å—å –∫–æ–¥ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–æ–º–æ–∫–æ–¥–∞, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ

    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π (–µ—Å–ª–∏ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º):")
    bot.register_next_step_handler(message, process_max_activations_step, promocode, reward, expiration_date)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–π
def process_max_activations_step(message, promocode, reward, expiration_date):
    user_id = message.from_user.id
    chat_id = message.chat.id
    max_activations_str = message.text
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ï—Å–ª–∏ max_activations_str –ø—É—Å—Ç, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ None (–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π)
    max_activations = None if not max_activations_str else int(max_activations_str)

    # –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–æ–º–æ–∫–æ–¥–∞
    # –î–æ–±–∞–≤—å—Ç–µ –∫–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

    # –ü—Ä–∏–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("INSERT INTO promocodes (code, reward, expiration_date, max_activations, current_activations) VALUES (?, ?, ?, ?, 0)", (promocode, reward, expiration_date, max_activations))
    conn.commit()

    bot.send_message(chat_id, f"–ü—Ä–æ–º–æ–∫–æ–¥ '{promocode}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –ù–∞–≥—Ä–∞–¥–∞: {reward}, –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: {expiration_date}, –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π: {max_activations if max_activations else '–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ'}.")










































# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
@bot.callback_query_handler(func=lambda call: call.data.startswith('cancel_'))
def cancel_game(call):
    user_id = call.from_user.id
    game_id = call.data.replace('cancel_', '')
    chat_id = call.message.chat.id

    if game_id in active_games and active_games[game_id]["creator_id"] == user_id and not active_games[game_id]["canceled"]:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 95% —Å—Ç–∞–≤–∫–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∏–≥—Ä—ã
        bet = active_games[game_id]["bet"]
        prize = bet * 0.95
        new_balance = get_user_balance(user_id) + prize
        update_user_balance(user_id, new_balance)
        
        # –£–¥–∞–ª—è–µ–º –∏–≥—Ä—É –∏ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Ç–º–µ–Ω–µ–Ω–Ω—É—é
        active_games[game_id]["canceled"] = True
        del active_games[game_id]

        # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
        bot.edit_message_reply_markup(chat_id, call.message.message_id, reply_markup=None)
        bot.send_message(chat_id, f"–ò–≥—Ä–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –∏ –≤–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ {prize:.2f} ü™ô.")
    else:
        bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç—É –∏–≥—Ä—É.")

# –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
conn.close()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user_to_database(user_id, message):
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å –ø–æ–º–æ—â—å—é API Telegram
    user = message.from_user
    user_id = user.id
    first_name = user.first_name
    last_name = user.last_name
    username = user.username if user.username else ""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —á–∞—Ç–∞
    chat_id = "personal" if message.chat.type == 'private' else "group"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    existing_user = cursor.fetchone()
    
    if existing_user is None:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        cursor.execute("INSERT INTO users (user_id, first_name, last_name, username, chat_id, balance, status) VALUES (?, ?, ?, ?, ?, 0, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')", (user_id, first_name, last_name, username, chat_id))
        conn.commit()
    
    conn.close()


"""# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user_to_database(user_id, status):
    with db_lock:
        conn = sqlite3.connect('database.db')
        cursor = conn.cursor()
        cursor.execute("INSERT OR REPLACE INTO users (user_id, status) VALUES (?, ?)", (user_id, status))
        conn.commit()
        conn.close()



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
def add_user_to_database(user_id, username):
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    existing_user = cursor.fetchone()
    
    if existing_user is None:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        cursor.execute("INSERT INTO users (user_id, username, balance, status) VALUES (?, ?, 0, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')", (user_id, username))
        conn.commit()
    
    conn.close()

"""

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
@bot.message_handler(commands=['admin'])
def admin_panel(message):
    user_id = message.from_user.id
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()

    if user_info and user_info[7] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
        markup = types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /admin
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å! üöÄ", reply_markup=markup)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
        admin_menu = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏:\n"
        admin_menu += "/give_money <user_id> <amount> - –í—ã–¥–∞—Ç—å –±–∞–±–∫–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        admin_menu += "/send_broadcast <message> - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
        admin_menu += "/edit_profile <user_id> <new_status> - –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        bot.send_message(message.chat.id, admin_menu)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏.")

    conn.close()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /give_money
@bot.message_handler(commands=['give_money'])
def give_money(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()

    if user_info and user_info[7] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        command_parts = message.text.split()
        if len(command_parts) != 3:
            bot.send_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /give_money <username> <amount>")
            return

        username = command_parts[1]
        amount = int(command_parts[2])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∏–∫–æ–º
        cursor.execute("SELECT * FROM users WHERE username=?", (username,))
        recipient_info = cursor.fetchone()

        if recipient_info:
            recipient_user_id = recipient_info[0]
            # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute("UPDATE users SET balance = balance + ? WHERE username=?", (amount, username))
            conn.commit()
            bot.send_message(chat_id, f"–í—ã –≤—ã–¥–∞–ª–∏ {amount} ü™ô –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{username}.")
        else:
            bot.send_message(chat_id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∏–∫–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    else:
        bot.send_message(chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

    conn.close()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /send_broadcast
@bot.message_handler(commands=['send_broadcast'])
def send_broadcast(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()

    if user_info and user_info[7] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        command_parts = message.text.split(' ', 1)
        if len(command_parts) != 2:
            bot.send_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /send_broadcast <—Å–æ–æ–±—â–µ–Ω–∏–µ>")
            return

        broadcast_message = command_parts[1]

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT user_id FROM users")
        all_users = cursor.fetchall()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞—Å—Å—ã–ª–∫—É –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        for user in all_users:
            bot.send_message(user[0], broadcast_message)

        bot.send_message(chat_id, f"–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")
    else:
        bot.send_message(chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

    conn.close()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /edit_profile
@bot.message_handler(commands=['edit_profile'])
def edit_profile(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()

    if user_info and user_info[3] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        command_parts = message.text.split()
        if len(command_parts) != 3:
            bot.send_message(chat_id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /edit_profile <user_id> <new_status>")
            return

        try:
            edited_user_id = int(command_parts[1])
            new_status = command_parts[2]
        except ValueError:
            bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.")
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º user_id
        cursor.execute("SELECT * FROM users WHERE user_id=?", (edited_user_id,))
        edited_user_info = cursor.fetchone()

        if edited_user_info:
            # –ò–∑–º–µ–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute("UPDATE users SET status = ? WHERE user_id=?", (new_status, edited_user_id))
            conn.commit()
            bot.send_message(chat_id, f"–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {edited_user_id} –∏–∑–º–µ–Ω–µ–Ω.")
        else:
            bot.send_message(chat_id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    else:
        bot.send_message(chat_id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")

    conn.close()


# ...

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
user_status = {}

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ—Ñ–∏–ª—å ü™™")
def handle_profile_button(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()

    if user_info:
        # –†–∞–∑–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        id, user_id, username, first_name, last_name, chat_id, balance, status = user_info[0], user_info[1], user_info[2], user_info[3], user_info[4], user_info[5], user_info[6], user_info[7]

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–º–∞–π–ª–∏–∫–∞–º–∏
        profile_message = f"üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        profile_message += f"üìõ –ò–º—è: @{message.from_user.username or 'N/A'}\n"
        profile_message += f"üÜî ID: {message.from_user.id}\n"
        profile_message += f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance} ü™ô\n"
        profile_message += f"üìå –°—Ç–∞—Ç—É—Å: {status}\n"

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è")  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        markup.add(item1)

        bot.send_message(message.chat.id, profile_message, reply_markup=markup)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        user_status[user_id] = "–ü—Ä–æ—Ñ–∏–ª—å"
    else:
        bot.send_message(message.chat.id, "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /start.")

    conn.close()




# ...

# ...
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å ‚ÑπÔ∏è"
@bot.message_handler(func=lambda message: message.text == "–ü–æ–º–æ—â—å ‚ÑπÔ∏è")
def handle_help_button(message):
    help_message = "‚ÑπÔ∏è–û –ø—Ä–æ–µ–∫—Ç–µ‚ÑπÔ∏è\n\n–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏üó£Ô∏è @–ø–æ—Ç–æ–º\n–ß–∞—Ç –∏–≥—Ä—ãüé≤\nhttps://t.me/+fYWDIZW__DFhYWVi üìû\n–ì—Ä—É–ø–ø–∞ –æ–±—â–µ–Ω–∏—èüí≠\nhttps://t.me/+gJ3ZNwo9vt43MmI6 üìû\n–ù–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞üì∞\nhttps://t.me/+3h271UiWGkRjMjEy üìû"
    bot.send_message(message.chat.id, help_message)

# ...

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å"
@bot.message_handler(func=lambda message: message.text == "–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å üõ†")
def open_admin_panel(message):
    user_id = message.from_user.id
    conn = sqlite3.connect('database.db')
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    cursor.execute("SELECT * FROM users WHERE user_id=?", (user_id,))
    user_info = cursor.fetchone()

    if user_info and user_info[7] == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
        markup = types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å! üöÄ", reply_markup=markup)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
        admin_menu = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏:\n"
        admin_menu += "/give_money <user_id> <amount> - –í—ã–¥–∞—Ç—å –±–∞–±–∫–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        admin_menu += "/send_broadcast <message> - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n"
        admin_menu += "/edit_profile <user_id> <new_status> - –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        bot.send_message(message.chat.id, admin_menu)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏.")

    conn.close()

# ...



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n/start - –Ω–∞—á–∞—Ç—å\n/help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É")



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    bot.reply_to(message, "–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling(none_stop=True)
